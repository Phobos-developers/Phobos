name: Nightly Build

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: DevBuild
  # GIT_COMMIT: $(git rev-parse --short "$GITHUB_SHA")
  # GIT_BRANCH: ${GITHUB_REF#refs/heads/}

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - uses: ammaraskar/msvc-problem-matcher@master
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:GitCommit=${{github.sha}} /p:GitBranch=${{github.ref}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload Artifact
      if: ${{success()}}
      uses: actions/upload-artifact@v2
      with:
        name: compiled-dll-${{github.sha}}
        path: |
          ${{env.SOLUTION_FILE_PATH}}/${{env.BUILD_CONFIGURATION}}/Phobos.dll
          ${{env.SOLUTION_FILE_PATH}}/${{env.BUILD_CONFIGURATION}}/IntDir/Phobos.pdb
